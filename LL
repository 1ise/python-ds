class Node:
    def __init__(self,data=None,next=None):
        self.data=data
        self.next=next

class LinkedList:
    def __init__(self):
        self.head=None
    
    def iab(self,data):
        node=Node(data,self.head)
        self.head=node
    
    def print(self):
        if self.head==None:
            print("Empty Linked List")
            return
        itr=self.head
        s=''
        while(itr):
            s+=str(itr.data)+'-->'
            itr=itr.next
        print(s)
    def iae(self,data):
        if self.head==None:
            self.iab(data)
            return
        itr=self.head
        while(itr.next):
            itr=itr.next
        node=Node(data,None)
        itr.next=node
        
    def length(self):
        c=0
        itr=self.head
        while(itr):
            c=c+1
            itr=itr.next
        return c
    def iam(self,index,data):
        c=0
        itr=self.head
        while(itr):
            if c==index-1:
                node=Node(data,itr.next)
                itr.next=node
            c+=1
            itr=itr.next                  
    def rein(self,index):
        if index<0 or self.length()<=index:
            raise Exception("Not Possibe")
        c=0
        itr=self.head
        while(itr):
            if c==index-1:
                itr.next=itr.next.next
            c=c+1
            itr=itr.next
    
    def rbv(self,data):
        itr=self.head
        while(itr):
            if itr.next.data==data:
                itr.next=itr.next.next
                return
            itr=itr.next
    def search(self,data):
        c=0
        itr=self.head
        while(itr):

            if itr.data==data:
                return c
            itr=itr.next
            c+=1 
                
if __name__=='__main__':
    ll=LinkedList()
    ll.iab(2001)
    ll.iab('06')
    ll.iab(15)
    ll.iae(5)
    ll.iae('rocks')
    ll.print()
    ll.iam(3,'TJ')
    ll.print()
    ll.rein(4)
    ll.print()
    ll.rbv('TJ')
    ll.print()
    print(ll.search(2001))
    print(ll.length())
